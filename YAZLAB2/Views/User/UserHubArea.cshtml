@{
    ViewData["Title"] = "Bildirimler";
}

<h2>@ViewData["Title"]</h2>

<div class="d-flex justify-content-between align-items-center p-3 shadow-sm bg-light">
    <h1 class="display-6">Hoşgeldin, @User.Identity.Name!</h1>
    <div>
        <a href="/Etkinlik/Index" class="btn btn-outline-primary me-2">Etkinliklere Git</a>
        <a href="/User/Profile" class="btn btn-outline-primary me-2">Profil</a>
        <a href="/Bildirim/KullaniciBildirimler" class="btn btn-danger">Kullanıcı Bildirimleri</a>
        <a href="/Mesaj/MesajGonder" class="btn btn-danger">Mesaj Gönder</a>
        <a href="/Mesaj/Mesajlarim" class="btn btn-danger">Mesajlarım</a>
        <a href="/Mesaj/GonderilenMesajlar" class="btn btn-danger">Gönderilen Mesajlar</a>
        <a href="/User/Login" class="btn btn-danger">Çıkış Yap</a>
    </div>
</div>
<!-- Bildirim alanı -->
<div id="notificationArea" style="position: fixed; top: 0; right: 0; width: 300px; z-index: 1000;">
    <h4>Bildirimler</h4>
    <div id="notifications" style="max-height: 400px; overflow-y: auto;">
        <!-- Bildirimler burada görünecek -->
    </div>
</div>

<!-- SignalR Script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft.aspnet.signalr-core/3.1.21/signalr.min.js"></script>

<script>
    // SignalR bağlantısını oluştur
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")  // Hub URL'si
        .build();

    // Bildirim alındığında çalışacak fonksiyon
    connection.on("ReceiveNotification", function (message) {
        const notifications = document.getElementById("notifications");
        const newNotification = document.createElement("div");
        newNotification.textContent = message;
        newNotification.classList.add("notification"); // Stil ekle
        notifications.appendChild(newNotification);

        // Bildirimi belirli bir süre sonra kaldır (opsiyonel)
        setTimeout(() => {
            notifications.removeChild(newNotification);
        }, 5000); // 5 saniye sonra kaldır
    });

    // Bağlantıyı başlat
    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>

<style>
    .notification {
        background-color: #f0f0f0;
        border: 1px solid #ccc;
        padding: 10px;
        margin: 5px 0;
        border-radius: 5px;
    }
</style>
<!-- SignalR Script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft.aspnet.signalr-core/3.1.21/signalr.min.js"></script>

<script>
    // SignalR bağlantısını oluştur
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")  // Hub URL'si
        .build();

    // Bildirim alındığında çalışacak fonksiyon
    connection.on("ReceiveNotification", function (message) {
        const notifications = document.getElementById("notifications");
        const newNotification = document.createElement("div");
        newNotification.textContent = message;
        newNotification.classList.add("notification"); // Stil ekle
        notifications.appendChild(newNotification);

        // Bildirimi belirli bir süre sonra kaldır (opsiyonel)
        setTimeout(() => {
            notifications.removeChild(newNotification);
        }, 5000); // 5 saniye sonra kaldır
    });

    // Bağlantıyı başlat
    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>
