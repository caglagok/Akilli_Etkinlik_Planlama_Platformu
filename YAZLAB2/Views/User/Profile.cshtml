@{
    ViewData["Title"] = "Profile";
}

<header class="top-left-header">
    <a href="@Url.Action("UserHubArea", "User", new { Username = Model.UserName })" class="button back-to-home-button">
        <i class="bi bi-arrow-left"></i> Geri
    </a>
</header>

<div class="container mt-4">
    <div class="row">
        <!-- Harita Alanı -->
        <div class="col-md-6">
            <div id="map" class="rounded"></div>
        </div>
        <!-- Profil Bilgileri -->
        <div class="col-md-6">
            <div class="profile-container">
                <div class="profile-header">
                    <img src="@(!string.IsNullOrEmpty(Model.ProfilFoto) ? Model.ProfilFoto : Url.Content("~/images/default-profile-pic.jpg"))"
                         alt="Profil Fotoğrafı" class="profile-pic" />
                    <h2 class="username">@Model.Ad @Model.Soyad</h2>
                    <p class="location"><i class="bi bi-geo-alt"></i> @(!string.IsNullOrEmpty(Model.Konum) ? Model.Konum : "Konum bilgisi yok")</p>
                </div>

                <div class="details-container">
                    <div class="info-section">
                        <h3 class="section-title"><i class="bi bi-person"></i> Kişisel Bilgiler</h3>
                        <p><strong><i class="bi bi-envelope"></i> E-posta:</strong> @Model.Email</p>
                        <p><strong><i class="bi bi-calendar"></i> Doğum Tarihi:</strong> @(Model.DogumTarihi != null ? Model.DogumTarihi?.ToString("yyyy-MM-dd") : "Tarih bilgisi yok")</p>
                        <p><strong><i class="bi bi-gender-ambiguous"></i> Cinsiyet:</strong> @(string.IsNullOrEmpty(Model.Cinsiyet) ? "Belirtilmemiş" : Model.Cinsiyet)</p>
                        <p><strong><i class="bi bi-telephone"></i> Telefon:</strong> @(!string.IsNullOrEmpty(Model.TelefonNumarasi) ? Model.TelefonNumarasi : "Telefon numarası yok")</p>
                    </div>
                </div>

                <div class="profile-actions">
                    <a href="@Url.Action("UpdateUser", "User")" class="button profile-update-button">
                        <i class="bi bi-pencil"></i> Profili Güncelle
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<script>
    document.addEventListener('DOMContentLoaded', function () {
        mapboxgl.accessToken = 'pk.eyJ1Ijoic2VseWlsIiwiYSI6ImNsdjUyN2d1ZTBkY28yamxidXRxYm1tNnUifQ.Uqy4MfIj3drA__4mvRldfw';

        var userLocation = {
            Lat: @Html.Raw(Json.Serialize(Model.Lat)),
            Lng: @Html.Raw(Json.Serialize(Model.Lng))
        };

        var nearbyEvents = @Html.Raw(Json.Serialize(Model.NearbyEvents));

        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [userLocation.Lng, userLocation.Lat],
            zoom: 12
        });

        if (!isNaN(userLocation.Lat) && !isNaN(userLocation.Lng) && userLocation.Lat !== 0 && userLocation.Lng !== 0) {
            new mapboxgl.Marker({ color: 'blue' })
                .setLngLat([userLocation.Lng, userLocation.Lat])
                .setPopup(new mapboxgl.Popup().setText('Kullanıcının Konumu'))
                .addTo(map);
        } else {
            console.error("Invalid user location:", userLocation);
        }

        nearbyEvents.forEach(event => {
            event.Lat = parseFloat(event.lat);
            event.Lng = parseFloat(event.lng);

            if (!isNaN(event.Lat) && !isNaN(event.Lng) && event.Lat !== 0 && event.Lng !== 0) {
                new mapboxgl.Marker({ color: 'red' })
                    .setLngLat([event.Lng, event.Lat])
                    .setPopup(new mapboxgl.Popup().setText(`${event.eventName} - ${event.location}`))
                    .addTo(map);
            } else {
                console.error("Invalid coordinates for event:", event);
            }
        });
    });
</script>

<style>
    #map {
        width: 100%;
        height: 100%;
        min-height: 400px;
        border-radius: 12px;
    }

    body {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        color: black; /* Varsayılan yazı rengi siyah */
        margin: 0;
        padding: 0;
    }

    .profile-container {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        color: #000; /* Profil alanındaki yazılar siyah */
    }

    .profile-header {
        text-align: center;
        margin-bottom: 20px;
    }

    .profile-pic {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
        margin-bottom: 15px;
    }

    .username {
        font-size: 24px;
        font-weight: bold;
        color: #000; /* Kullanıcı adı siyah */
    }

    .location {
        font-size: 16px;
        color: #555; /* Hafif gri */
    }

    .section-title {
        font-size: 20px;
        font-weight: bold;
        margin-bottom: 10px;
        border-bottom: 1px solid #ddd;
        color: #000; /* Başlıklar siyah */
    }

    .button {
        display: inline-block;
        padding: 10px 20px;
        background-color: #007bff;
        color: #fff;
        border-radius: 5px;
        text-decoration: none;
        transition: background-color 0.3s;
    }

        .button:hover {
            background-color: #0056b3;
        }

</style>
